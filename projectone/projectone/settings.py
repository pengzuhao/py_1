#!/usr/bin/python
# --*-- coding:utf-8 --*--

"""
Django settings for projectone project.

Generated by 'django-admin startproject' using Django 1.11.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from dataencry import crypts

ins = crypts()
keyone = os.environ.get('keyone')
keytwo = os.environ.get('keytwo')
dbname = os.environ.get('dbname')
dbhost = os.environ.get('dbhost')
dbport = os.environ.get('dbport')
dbuser = os.environ.get('dbuser')
dbpwd = os.environ.get('dbpwd')
dbname = ins.decrypt(dbname)
dbhost = ins.decrypt(dbhost)
dbport = ins.decrypt(dbport)
dbuser = ins.decrypt(dbuser)
dbpwd = ins.decrypt(dbpwd)
mailfromuser = os.environ.get('mailfromuser')
smtpserver = os.environ.get('smtpserver')
smtpport = os.environ.get('smtpport')
smtppwd = os.environ.get('smtppwd')
smtpadmin = os.environ.get('smtpadmin')
mailfromuser = ins.decrypt(mailfromuser)
smtpserver = ins.decrypt(smtpserver)
smtpport = ins.decrypt(smtpport)
smtppwd = ins.decrypt(smtppwd)
smtpadmin = ins.decrypt(smtpadmin)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '31dk%di14j3pr__7&n-(114s*o_abzx5*dyo$e1vzh^yu%_v44'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },  # 针对 DEBUG = True 的情况
    },
    'formatters': {
        'standard': {
            'format': '%(levelname)s %(asctime)s %(pathname)s %(filename)s %(module)s %(funcName)s %(lineno)d: %(message)s'
        },  # 对日志信息进行格式化，每个字段对应了日志格式中的一个字段，更多字段参考官网文档，我认为这些字段比较合适，输出类似于下面的内容

    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
             'formatter': 'standard'
        },
        'file_handler': {
             'level': 'DEBUG',
             'class': 'logging.handlers.TimedRotatingFileHandler',
             'filename': os.path.join(BASE_DIR, 'projectone/logs/admin.log'),
             'formatter': 'standard'
        },  # 用于文件输出
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file_handler', 'console'],
            'level': 'INFO',
            'propagate': True   # 是否继承父类的log信息
        },  # handlers 来自于上面的 handlers 定义的内容
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    }
}

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'bootstrap_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sockalert',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projectone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'twodb': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Djangodb',
        'HOST': dbhost,
        'PORT': dbport,
        'USER': dbuser,
        'PASSWORD': dbpwd,
    },
    'sockas': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': dbname,
        'HOST': dbhost,
        'PORT': dbport,
        'USER': dbuser,
        'PASSWORD': dbpwd,
    },
}

DATABASE_ROUTERS = ['projectone.database_router.DatabaseAppsRouter']

DATABASE_APPS_MAPPING = {
    'sockalert': 'sockas'
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'zh-hans'

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/sta/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR, 'static'),
)

APPEND_SLASH = False

EMAIL_HOST = smtpserver                  # SMTP地址
EMAIL_PORT = smtpport                    # SMTP端口
EMAIL_HOST_USER = mailfromuser           # 我自己的邮箱
EMAIL_HOST_PASSWORD = smtppwd            # 我的邮箱密码
EMAIL_SUBJECT_PREFIX = u'益杏业务接口报警'    # 为邮件Subject-line前缀,默认是'[django]'
EMAIL_USE_TLS = False                       # 与SMTP服务器通信时，是否启动TLS链接(安全链接)。默认是false
SERVER_EMAIL = os.environ.get('smtpadmin')  # 管理员站点
